---
ci_cd:
  IMAGE_STREAM_NAMESPACE: "{{ ci_cd_namespace }}"

arachni:
  SOURCE_REPOSITORY_URL: "{{ cop_quickstarts }}"
  SOURCE_CONTEXT_DIR: jenkins-agents/jenkins-agent-arachni
  BUILDER_IMAGE_NAME: quay.io/openshift/origin-jenkins-agent-base:4.5
  NAME: jenkins-agent-arachni
  SOURCE_REPOSITORY_REF: "{{ cop_quickstarts_raw_version_tag }}"

ansible_connection: local

openshift_cluster_content:
- galaxy_requirements:
  - "{{ inventory_dir }}/../exercise-requirements.yml"
- object: ci-cd-tooling
  content:
  - name: "nexus"
    namespace: "{{ ci_cd_namespace }}"
    template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/nexus/nexus-deployment-template.yml"
    params: "{{ playbook_dir }}/params/nexus"
    tags:
    - nexus
  - name: "jenkins-mongodb"
    namespace: "{{ ci_cd_namespace }}"
    template: "{{ playbook_dir }}/templates/mongodb-ephemeral.yml"
    params: "{{ playbook_dir }}/params/mongodb"
    tags:
    - mongodb
  - name: "jenkins"
    namespace: "{{ ci_cd_namespace }}"
    template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/jenkins/jenkins-persistent-template.yml"
    params: "{{ playbook_dir }}/params/jenkins"
    post_steps:
      - role: casl-ansible/roles/openshift-imagetag
        vars:
          source_img: "quay.io/rht-labs/enablement-npm:latest"
          img_tag: "jenkins-agent-npm:latest"
      - role: casl-ansible/roles/openshift-labels
        vars:
          label: "role=jenkins-slave"
          target_object: "imagestream"
          target_name: "jenkins-agent-npm"
    tags:
    - jenkins
- object: ci-cd-builds
  content:
  - name: "jenkins-s2i"
    namespace: "{{ ci_cd_namespace }}"
    template: "{{ playbook_dir }}/templates/jenkins-s2i-build-template-with-secret.yml"
    params: "{{ playbook_dir }}/params/jenkins-s2i"
    params_from_vars: "{{ ci_cd }}"
    tags:
    - jenkins
- object: ci-cd-deployment
  content:
  - name: "sonarqube-postgresql"
    namespace: "{{ ci_cd_namespace }}"
    template: "{{ playbook_dir }}/templates/postgresql-ephemeral.yml"
    params: "{{ playbook_dir }}/params/postgresql"
    tags:
    - postgresql
  - name: "sonarqube"
    namespace: "{{ ci_cd_namespace }}"
    template: "{{ playbook_dir }}/templates/sonarqube-deploy.yml"
    params: "{{ playbook_dir }}/params/sonarqube"
    tags:
    - sonarqube
- object: jenkins-agent-nodes
  content:
    - name: jenkins-agent-zap
      namespace: "{{ ci_cd_namespace }}"
      pre_steps:
        - role: casl-ansible/roles/openshift-imagetag
          vars:
            source_img: "quay.io/rht-labs/jenkins-slave-zap:do500.v2"
            img_tag: "jenkins-agent-zap:latest"
        - role: casl-ansible/roles/openshift-labels
          vars:
            label: "role=jenkins-slave"
            target_object: "imagestream"
            target_name: "jenkins-agent-zap"
      tags:
      - jenkins-agents
      - zap-agent
    - name: jenkins-agent-arachni
      template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/.openshift/templates/jenkins-agent-generic-template.yml"
      params_from_vars: "{{ arachni }}"
      namespace: "{{ ci_cd_namespace }}"
      tags:
      - jenkins-agents
      - arachni-agent